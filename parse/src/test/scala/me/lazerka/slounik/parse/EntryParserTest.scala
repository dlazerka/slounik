package me.lazerka.slounik.parse

import org.scalatest.{FlatSpec, Matchers}

/**
 * @author Dzmitry Lazerka
 */
class EntryParserTest extends FlatSpec with Matchers {

	"parseLine" should "parse simple lines" in {
		val str = "<b>встрепать</b> — ускудлаціць, узлахмаціць"

		EntryParser.parseLine(str) should be (Array("ускудлаціць", "узлахмаціць"))
	}

	"parseLine" should "parse папячы" in {
		val str = """|<b>папячы</b> —
			         | 1) испечь, изжарить (<i>долго, неоднократно</i>));
					 | 2) обжечь, опалить (<i>огнём, солнцем</i>);
					 | 3) попечь, пожарить (<i>некоторое время</i>)
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("испечь", "изжарить", "обжечь", "опалить", "попечь", "пожарить"))
	}

	"parseLine" should "parse асадка" in {
		val str = """|<b>асадка</b> —
			         | 1) насадка, присадка;
					 | 2) оправка, обрамление;
					 | 3) установка;
					 | 4) <i>уст.</i> ручка <i>(письменная принадлежность</i>)
		             |""".stripMargin

		EntryParser.parseLine(str) should be
				Array("насадка", "присадка", "оправка", "обрамление", "установка", "ручка")
	}

	"parseLine" should "parse кіраванне" in {
		val str = """|<b>кіраванне</b> — 1) управление; 2) руководство; правление 3) <i>лінгв.</i> управление
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("управление", "руководство"))
	}

	"parseLine" should "parse ух" in {
		val str = """|<b>ух</b> <i>межд.</i><br>
		             |<b>1.</b> <i>(при выражении восхищения, удивления)</i> ух<br>
		             |<b>2.</b> <i>(при выражении чувства усталости и других чувств)</i> ух<br><b>ух, как жарко</b>
		             | ух, як горача<br>
		             |<b>3.</b> <i>(при выражении резкого низкого звука от удара, выстрела)</i> ух<br>
		             |<b>ух! - раздался глухой удар</b> ух! - раздаўся глухі ўдар
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("ух"))
	}

	"parseLine" should "parse трое" in {
		val str = """|<b>трое</b> <i>(с сущ. муж.)</i> тры, <i>род.</i> трох;
		             | <i>(с сущ. муж. и жен., вместе взятыми, с сущ. общего рода, с сущ., употребляющимися
		             | только во мн., с сущ., обозначающими детей и детёнышей, с личными мест. мн.)</i> трое,
		             | <i>род.</i> траіх<br>
		             |<b>трое товарищей</b> тры таварышы<br>
		             |<b>их было трое - двое мужчин и одна женщина</b> іх было трое - два мужчыны і адна жанчына<br>
		             |<b>у них трое детей</b> у іх трое дзяцей<br>
		             |<b>трое котят</b> трое кацянят<br>
		             |<b>трое суток</b> трое сутак
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("тры", "трое"))
	}

	"parseLine" should "parse урок" in {
		val str = """|<b>урок</b> <i>в разн. знач.</i> урок, -ка <i>муж.</i><br>
		             |<b>урок белорусского языка</b> урок беларускай мовы<br>
		             |<b>это послужит ему уроком</b> гэта паслужыць (будзе) яму урокам<br>
		             |<b>брать уроки (чего-либо у кого-либо)</b> браць урокі (чаго-небудзь у каго-небудзь)<br>
		             |<b>давать уроки (где-либо, кому-либо)</b> даваць урокі (дзе-небудзь, каму-небудзь)
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("урок"))
	}

	"parseLine" should "parse туда-сюда" in {
		val str = """|<b>туда-сюда</b> <i>разг.</i><br><b>1.</b> <i>нареч. (в ту и другую сторону)</i> туды-сюды<br>
		             |<b>посмотреть туда-сюда</b> паглядзець туды-сюды<br>
		             |<b>2.</b> <i>безл. в знач. сказ. (сойдёт, ничего)</i> сяк-так, сюды-туды<br>
		             |<b>это ещё туда-сюда</b> гэта яшчэ сяк-так (сюды-туды)
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("туды-сюды", "сяк-так", "сюды-туды"))
	}

	"parseLine" should "parse учитель" in {
		val str = """|<b>учитель</b> <i>в разн. знач.</i> настаўнік, -ка <i>муж.</i><br>
		             |<b>народный учитель</b> народны настаўнік<br>
		             |<b>присвоить почётное звание «Народный учитель Республики Беларусь»</b> прысвоіць ганаровае званне «Народны настаўнік Рэспублікі Беларусь»
		             | """.stripMargin

		EntryParser.parseLine(str) should be (Array("настаўнік"))
	}

	"parseLine" should "parse фантазия" in {
		val str = """|<b>фантазия</b> <i>в разн. знач.</i> фантазія, -зіі <i>жен.</i><br>
		             |<b>творческая фантазия</b> творчая фантазія<br>
		             |<b>предаваться фантазиям</b> фантазіраваць<br>
		             |<b>всё это одна фантазия</b> усё гэта адна фантазія<br>
		             |<b>«Фантазия» Шумана</b> <i>муз.</i> «Фантазія» Шумана
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("фантазія"))
	}

	"parseLine" should "parse фаренгейт" in {
		val str = """|<b>фаренгейт</b>: <b>термометр фаренгейта</b> тэрмометр Фарэнгейта<br>
		             |<b>100° по фаренгейту</b> 100° па Фарэнгейту
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array())
	}

	"parseLine" should "parse евклидов" in {
		val str = """<b>евклидов</b> <i>см.</i> <a href="эвклидов">эвклидов</a>"""

		EntryParser.parseLine(str) should be (Array())
	}

	"parseLine" should "parse порошок" in {
		val str = """|<b>порош<u>о</u>к</b> - параш<u>о</u>к, -шк<u>у</u>
		             |<br><b>порош<u>о</u>к алм<u>а</u>зный</b> - параш<u>о</u>к алм<u>а</u>зны
		             |<br><b>порош<u>о</u>к водораспылённый</b> - параш<u>о</u>к водарасп<u>ы</u>лены
		             |<br><b>порош<u>о</u>к высококоэрцит<u>и</u>вный магн<u>и</u>тный</b> - параш<u>о</u>к высокакаэрцыт<u>ы</u>ўны магн<u>і</u>тны
		             |<br><b>порош<u>о</u>к газораспылённый</b> - параш<u>о</u>к газарасп<u>ы</u>лены
		             |<br><b>порош<u>о</u>к карб<u>и</u>да тит<u>а</u>на</b> - параш<u>о</u>к карб<u>і</u>ду тыт<u>а</u>ну
		             |<br><b>порош<u>о</u>к лег<u>и</u>рованный</b> - параш<u>о</u>к лег<u>і</u>раваны
		             |<br><b>порош<u>о</u>к м<u>а</u>гний-ц<u>и</u>нковый ферр<u>и</u>товый</b> - параш<u>о</u>к м<u>а</u>гній-ц<u>ы</u>нкавы фер<u>ы</u>тавы
		             |<br><b>порош<u>о</u>к магн<u>и</u>тный</b> - параш<u>о</u>к магн<u>і</u>тны
		             |<br><b>порош<u>о</u>к магнитом<u>я</u>гкий ферр<u>и</u>товый</b> - параш<u>о</u>к магнітам<u>я</u>ккі фер<u>ы</u>тавы
		             |<br><b>порош<u>о</u>к м<u>е</u>лкий</b> - параш<u>о</u>к др<u>о</u>бны
		             |<br><b>порош<u>о</u>к мелкодисп<u>е</u>рсный</b> - параш<u>о</u>к дробнадысп<u>е</u>рсны
		             |<br><b>порош<u>о</u>к металл<u>и</u>ческий</b> - параш<u>о</u>к метал<u>і</u>чны
		             |<br><b>порош<u>о</u>к металл<u>и</u>ческого тит<u>а</u>на</b> - параш<u>о</u>к метал<u>і</u>чнага тыт<u>а</u>ну
		             |<br><b>порош<u>о</u>к окс<u>и</u>дный</b> - параш<u>о</u>к акс<u>і</u>дны
		             |<br><b>порош<u>о</u>к предвар<u>и</u>тельно лег<u>и</u>рованный</b> - параш<u>о</u>к папяр<u>э</u>дне лег<u>і</u>раваны
		             |<br><b>порош<u>о</u>к разм<u>е</u>ром 5-6 мкм</b> - параш<u>о</u>к пам<u>е</u>рам 5-6 мкм
		             |<br><b>порош<u>о</u>к специ<u>а</u>льный</b> - параш<u>о</u>к спецы<u>я</u>льны
		             |<br><b>порош<u>о</u>к субмикр<u>о</u>нный</b> - параш<u>о</u>к субмікр<u>о</u>нны
		             |<br><b>порош<u>о</u>к ультрадисп<u>е</u>рсный</b> - параш<u>о</u>к ультрадысп<u>е</u>рсны
		             |<br><b>порош<u>о</u>к ферр<u>и</u>товый</b> - параш<u>о</u>к фер<u>ы</u>тавы
		             |<br><b>порош<u>о</u>к ферроабраз<u>и</u>вный</b> - параш<u>о</u>к фераабраз<u>і</u>ўны
		             |""".stripMargin

		EntryParser.parseLine(str) should be (Array("парашок"))
	}

	"parseLine" should "parse ш-ш" in {
		val str = """<b>ш-ш</b> <i>межд. разг.</i> ш-ш; ша; ціха<br><b>ш-ш, слушайте!</b> ш-ш, слухайце!"""

		EntryParser.parseLine(str) should be (Array("ш-ш", "ша", "ціха"))
	}

	"parseLine" should "parse ветвь" in {
		val str = """<b>ветвь</b> — 1) галіна (<i>дрэва</i>); 2) галіна (<i>навукі</i>); 3) <i>ж.-д.</i> ветка"""

		EntryParser.parseLine(str) should be (Array("галіна", "ветка"))
	}

	"parseLine" should "parse ых" in {
		val str = """<b>ых</b>, <i>междомет.</i><br><b>1.</b> межд. негодования, - эх. Нсл. 722; Ксл.<br><i>Ых, які ты нягодны!</i> Лятоўшчына Куз."""

		EntryParser.parseLine(str) should be (Array())
	}

}
